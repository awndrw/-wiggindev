name: CI

on:
    - push
    - workflow_dispatch

jobs:
    install:
        name: Get Packages
        runs-on: ubuntu-latest
        outputs:
            packages: ${{ steps.get-packages.outputs.packages }}
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/setup-node
            - run: yarn install --immutable --immutable-cache
            - id: get-packages
              shell: python
              run: |
                  import os, json
                  packages=os.listdir('packages')
                  jsonPackages=json.dumps(packages)
                  print(f'::set-output name=packages::{jsonPackages}')
                  os.system('echo "## Packages Loaded" >> $GITHUB_STEP_SUMMARY')
                  os.system('echo "" >> $GITHUB_STEP_SUMMARY')
                  for package in packages:
                      os.system(f'echo "- {package}" >> $GITHUB_STEP_SUMMARY')

    lint:
        name: Lint
        needs: [install]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/setup
            - run: yarn lint

    test:
        name: Test
        needs: [install]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/setup
            - run: yarn test

    typecheck:
        name: Typecheck
        needs: [install]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/setup
            - run: yarn typecheck

    build:
        name: Build
        needs: [install]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                node-version: [14, 16, 18]
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/setup
              with:
                  node-version: ${{ matrix.node-version }}
            - run: yarn build

    tag:
        name: Tag
        needs: [install]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                package: ${{ fromJSON(needs.install.outputs.packages) }}
        outputs:
            publish: ${{ steps.status.outputs.publish }}
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 2
            - id: tag
              uses: salsify/action-detect-and-tag-new-version@v2
              with:
                  tag-template: ${{ matrix.package }}/v{{VERSION}}
                  version-command: jq '.version' ./packages/${{ matrix.package }}/package.json
            - id: status
              run: echo "::set-output name=publish::${{ steps.tag.output.tag != '' }}"

    publish-npm:
        name: Publish to NPM
        needs: [install, tag]
        if: ${{ needs.tag.outputs.publish }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                package: ${{ fromJSON(needs.install.outputs.packages) }}
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/setup
              with:
                  registry-url: https://registry.npmjs.org
            - run: yarn workspace @wiggindev/${{ matrix.package }} npm publish --access public --tolerate-republish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    publish-gpr:
        name: Publish to GPR
        needs: [install, tag]
        if: ${{ needs.tag.outputs.publish }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                package: ${{ fromJSON(needs.install.outputs.packages) }}
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/setup
              with:
                  registry-url: https://npm.pkg.github.com
            - run: yarn workspace @wiggindev/${{ matrix.package }} npm publish --access public --tolerate-republish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GPR_TOKEN }}
